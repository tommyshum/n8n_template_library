{
  "id": 2284,
  "name": "Provide Real-Time Updates for Notion Databases via Webhooks with Supabase",
  "description": "Purpose\n\nThis enables webhooks for nearly realtime updates (every 5 seconds) from Notion Databases.\n\nProblem\n\nNotion does not offer webhooks. Even worse, the “Last edited time” property, we could use for polling, only updates every minute. This gives us a polling interval only as low as 2 minutes and we still need to implement a comparing mechanism to detect changes.\n\nSolution\n\nThis workflow caches states in between while doing efficient polling & comparing. It brings down the update latency from 2 minutes to 5 seconds and also provides the output of the changes only.\n\nDemo\n\nHow it works\n\nDatabase Pages are frequently polled while filtered by a last modified time stamp for more efficiency\nRetrieved pages get compared with previously cached versions in Supabase\nOnly new and changed pages are pushed to a registered webhook\n\nSetup\n\nCreate a new project in Supabase and import the DB schema (provided through Gumroad)\nAdd a \"Last edited time\" property to your Notion Database, if it has none yet\nDefine the dynamically generated settings_id from the settings table (Supabase) in the Globals node\nDefine the Notion Database URL in the Globals node\nDefine your custom Webhook URL in the last node where the results should be pushed to\nIt is recommended to call this workflow using this template to prevent simultaneous workflow executions\nSet the Schedule Trigger to every 5 seconds or less frequent\nMore detailed instructions provided within the workflow file and the illustrated instructions provided during the download\n\nExample output\n\n[\n  {\n    \"action\": \"changed\",\n    \"changes\": {\n      \"property_modified_at\": \"2024-06-04T17:59:00.000Z\",\n      \"property_priority\": \"important\"\n    },\n    \"data\": {\n      \"id\": \"ba761e03-7d6d-44c2-8e8d-c8a4fb930d0f\",\n      \"name\": \"Try out n8n\",\n      \"url\": \"https://www.notion.so/Try-out-n8n-ba761e037d6d44c28e8dc8a4fb930d0f\",\n      \"property_todoist_id\": \"\",\n      \"property_id\": \"ba761e037d6d44c28e8dc8a4fb930d0f\",\n      \"property_modified_at\": \"2024-06-04T17:59:00.000Z\",\n      \"property_status\": \"Backlog\",\n      \"property_priority\": \"important\",\n      \"property_due\": {\n        \"start\": \"2024-06-05\",\n        \"end\": null,\n        \"time_zone\": null\n      },\n      \"property_focus\": false,\n      \"property_name\": \"Try out n8n\"\n    },\n    \"updated_at\": \"2024-06-04T17:59:42.144+00:00\"\n  }\n]\n",
  "totalViews": 1331,
  "source": "official",
  "user": {
    "id": 91699,
    "name": "Mario",
    "username": "octionic",
    "bio": "Workflow Optimization Expert | Software Architect. Use my link to book an initial consultation for custom built workflows using n8n.",
    "verified": true,
    "links": "[\"https://octionic.com\"]",
    "avatar": "https://gravatar.com/avatar/48bf351cec848d87566d8cc78c9a783ec4807408366648de04cfe955d7a5ba21?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes",
    "Productivity",
    "Data & Storage"
  ],
  "nodes": [
    {
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers"
        ]
      }
    },
    {
      "name": "Notion",
      "type": "n8n-nodes-base.notion",
      "categories": [
        "Productivity"
      ],
      "subcategories": {}
    },
    {
      "name": "Supabase",
      "type": "n8n-nodes-base.supabase",
      "categories": [
        "Data & Storage"
      ],
      "subcategories": {}
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    }
  ],
  "nodeCount": 4,
  "createdAt": "2024-06-08T15:50:50.481Z",
  "path": "official/template_2284/workflow.json"
}