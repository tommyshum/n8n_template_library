{
  "id": 3672,
  "name": "SEO Blog Generator with GPT-4o, Perplexity, and Telegram Integration",
  "description": "SEO Blog Generator with GPT-4o, Perplexity, and Telegram Integration\n\nThis workflow helps you automatically generate SEO-optimized blog posts using Perplexity.ai, OpenAI GPT-4o, and optionally Telegram for interaction.\n\nüöÄ Features\n\nüß† Topic research via Perplexity sub-workflow\n‚úçÔ∏è AI-written blog post generated with GPT-4o\nüìä Structured output with metadata: title, slug, meta description\nüì© Integration with Telegram to trigger workflows or receive outputs (optional)\n\n‚öôÔ∏è Requirements\n\n‚úÖ OpenAI API Key (GPT-4o or GPT-3.5)\n‚úÖ Perplexity API Key (with access to /chat/completions)\n‚úÖ (Optional) Telegram Bot Token and webhook setup\n\nüõ† Setup Instructions\n\nCredentials:\n   Add your OpenAI credentials (openAiApi)\n   Add your Perplexity credentials under httpHeaderAuth\n   Optional: Setup Telegram credentials under telegramApi\n\nInputs:\n   Use the Form Trigger or Telegram input node to send a Research Query\n\nSubworkflow:\n   Make sure to import and activate the subworkflow Perplexity_Searcher to fetch recent search results\n\nCustomization:\n   Edit prompt texts inside the Blog Content Generator and Metadata Generator to change writing style or target industry\n   Add or remove output nodes like Google Sheets, Notion, etc.\n\nüì¶ Output Format\n\nThe final blog post includes:\n\n‚úÖ Blog content (1500-2000 words)\n‚úÖ Metadata: title, slug, and meta description\n‚úÖ Extracted summary in JSON\n‚úÖ Delivered to Telegram (if connected)\n\nNeed help? Reach out on the n8n community forum\n",
  "totalViews": 692,
  "source": "official",
  "user": {
    "id": 94001,
    "name": "HoangSP",
    "username": "hoangsp",
    "bio": "",
    "verified": false,
    "links": "[\"\"]",
    "avatar": "https://gravatar.com/avatar/12c9a6d2de8e99344f8dcbe99d48ac81f48d35789e3250604acc461dfaef31bd?r=pg&d=retro&size=200"
  },
  "categories": [
    "Communication",
    "HITL",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Memory"
        ],
        "Memory": [
          "For beginners"
        ]
      }
    },
    {
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Output Parsers"
        ]
      }
    },
    {
      "name": "Call n8n Workflow Tool",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Tools"
        ],
        "Tools": [
          "Recommended Tools"
        ]
      }
    }
  ],
  "nodeCount": 6,
  "createdAt": "2025-04-23T13:11:34.466Z",
  "path": "official/template_3672/workflow.json"
}