{
  "id": 3595,
  "name": "🧠 FloWatch 👁️ Analyze and Diagnose n8n Workflow Errors via OpenAI and Email",
  "description": "🧠 Analyze and Diagnose n8n Workflow Errors Automatically via OpenAI and Email\n\n\n\n&gt; ⚠️ This template is available on ☁️ Cloud & 🖥️ self-hosted n8n instances with the OpenAI node enabled.\n\n👤 Who is this for?\n\nThis workflow is designed for n8n developers, automation engineers, and DevOps teams who want to automatically capture and analyze workflow errors, and receive professional HTML-styled diagnostics directly in their inbox.\n\n💥 What problem does this solve?\n\nManually troubleshooting failed workflows in n8n can be time-consuming. This template streamlines error detection by:\n\nCapturing workflow failures using the Error Trigger node\nDiagnosing root causes with the help of OpenAI\nSending a fully-formatted, human-readable HTML error report via email\nIncluding practical resolutions and next-step suggestions\n\nThis helps you or your team resolve issues faster and avoid repeated manual debugging.\n\n⚙️ What this workflow does\n\n⚡ Triggers on any n8n workflow error\n📦 Extracts relevant error metadata including node, execution ID, and timestamps\n🧠 Sends error content to OpenAI for analysis and recommendations\n💌 Generates an HTML email report with inline styles and clear formatting\n📥 Emails the result to a system administrator or support email\n\n🛠️ Setup\n\nInstall the OpenAI node in your self-hosted n8n instance.\nAdd your OpenAI API Key securely in credentials.\nConfigure the SMTP Email node with your email credentials.\nAdjust the Error Trigger to monitor specific workflows or all workflows.\nSet your preferred admin or dev email address in the final node.\n\n🔧 How to customize this workflow to your needs\n\n🧩 Use a [Set node] to define your variables, such as:\n  Default admin email\n  Workflow filter (optional)\n✍️ Customize the prompt sent to OpenAI if you want deeper or more specific analysis\n🎨 Modify the email HTML styles to match your brand or internal format\n💾 Add additional logging (e.g., to Airtable, Google Sheets, or Notion) for long-term error tracking\n\n📌 Sticky Note\n\nTitle: Automated Error Reporter with AI-Powered Diagnosis  \nDescription: Captures any n8n error, sends it to OpenAI, and emails a beautiful HTML report to the administrator with steps to resolve the issue. Requires OpenAI credentials and SMTP configured.",
  "totalViews": 534,
  "source": "official",
  "user": {
    "id": 92159,
    "name": "RealSimple Solutions",
    "username": "joeperes",
    "bio": "",
    "verified": true,
    "links": "[\"https://joeperes.com\"]",
    "avatar": "https://gravatar.com/avatar/4ad55fbdcc7808056aa180c02d52e3e373d4b894df7fa986e2dfd6c7eb127bfc?r=pg&d=retro&size=200"
  },
  "categories": [
    "Communication",
    "HITL",
    "Development",
    "Core Nodes",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Gmail",
      "type": "n8n-nodes-base.gmail",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Output Parsers"
        ]
      }
    }
  ],
  "nodeCount": 5,
  "createdAt": "2025-04-17T23:41:56.986Z",
  "path": "official/template_3595/workflow.json"
}