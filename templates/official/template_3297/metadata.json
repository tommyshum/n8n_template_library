{
  "id": 3297,
  "name": "Monitor Dropbox Folders for New Files with DB Comparison",
  "description": "Here's the corrected English text:\n\nDropbox Folder Monitoring Workflow\n\nAs we don't have (yet?) a Dropbox node \"Watching new files\" or \"Watching folder\", I created this central workflow to do it.\n\nHow it works\nTriggered by Dropbox webhook\nI respond immediately to Dropbox to avoid webhook disabling\nThen I add/duplicate one branch per monitored folder, according to my needs\n\nIn my case, I need to monitor several folders, like \"vocal notes to process\", \"transcriptions to LinkedIn posts\" or \"quotes to add\".\n\nThis workflow shows 2 types of folder monitoring:\nWay #1: Each file in the monitored folder calls a sub-workflow\nWay #2: We get all files from the monitored folder and compare them to a database. If the file is not listed in DB, i supposed it's new one.\n\nWay #1 - We get all files from the monitored folder\nI set a variable folder_to_watch to indicate which folder to monitor. This step is here just to be homogeneous and allow setting the folder path only once in this branch.\nI list the folder files\nWe keep only files (exclude folders)\nThen I call the specialized sub-workflow\n\nWay #2 - We want only new files from the monitored folder\nI set a variable folder_to_watch to indicate which folder to monitor \nI list the folder files and keep only files\nMeanwhile, I query my DB to get known files about this folder (I send the query to NocoDB (folder_to_watch,eq,{{ $json.folder_to_watch }}))\nNow I can exclude old files and keep only new ones by merging (I compare from Dropbox file id - as the file could be renamed by the user)\nI add the new file in DB to be sure to recognize it next time - I save the JSON Dropbox data:\n{\n\"id\":\"{{ $json.id }}\",\n\"name\":\"{{ $json.name }}\",\n\"lastModifiedClient\": \"{{ $json.lastModifiedClient }}\",\n\"lastModifiedServer\": \"{{ $json.lastModifiedServer }}\",\n\"rev\": \"{{ $json.rev }}\",\n\"contentSize\": {{ $json.contentSize }},\n\"type\": \"{{ $json.type }}\",\n\"contentHash\": \"{{ $json.contentHash }}\",\n\"pathLower\": \"{{ $json.pathLower }}\",\n\"pathDisplay\": \"{{ $json.pathDisplay }}\",\n\"isDownloadable\": {{ $json.isDownloadable }}\n}\nAnd now I can call my sub-workflow :)\n\nMy DB\nColumns details:\nfolder_to_watch\ndata (json/text)\ntimestamp\nfile_id (Dropbox file ID, to ease future searches)\n\nMy vision:\nI have only one workflow in my n8n that monitors Dropbox folders/files\nThis workflow calls the required sub-workflow specialized for the tasks required\nI will have as many branches as I have folders to monitor (if I have 5 different folders to watch, I will get 5 branches and 5 sub-workflows)",
  "totalViews": 443,
  "source": "official",
  "user": {
    "id": 93379,
    "name": "David Levesque",
    "username": "davidlevesque",
    "bio": "",
    "verified": false,
    "links": "[]",
    "avatar": "https://gravatar.com/avatar/f931f17633f65fabc2e870402c17985083d08f81ee7c55cbd0fa173d730aa9de?r=pg&d=retro&size=200"
  },
  "categories": [
    "Data & Storage"
  ],
  "nodes": [
    {
      "name": "Dropbox",
      "type": "n8n-nodes-base.dropbox",
      "categories": [
        "Data & Storage"
      ],
      "subcategories": {}
    },
    {
      "name": "NocoDB",
      "type": "n8n-nodes-base.nocoDb",
      "categories": [
        "Data & Storage"
      ],
      "subcategories": {}
    }
  ],
  "nodeCount": 2,
  "createdAt": "2025-03-23T17:50:18.345Z",
  "path": "official/template_3297/workflow.json"
}