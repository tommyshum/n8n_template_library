{
  "id": 3797,
  "name": "Check Tron Wallet USDT Blacklist Status via Telegram",
  "description": "\nDescription\nThis n8n workflow template allows users to check if a Tron wallet address is blacklisted on the USDT contract via a Telegram bot. When a user sends the command {walletAddress} through the Telegram bot, the workflow queries the Tronscan API to determine if the provided wallet address is blacklisted. The result is then sent back to the user via the Telegram bot.\n\nDetailed Description\nWorkflow Overview\nThis workflow is designed to interact with users through a Telegram bot and check if a given Tron wallet address is blacklisted on the USDT contract. The workflow consists of four main nodes:\n\nTelegram Trigger Node: Listens for messages from the Telegram bot.\nHTTP Request Node: Sends a GET request to the Tronscan API to check the blacklist status of the provided wallet address.\nFunction Node: Processes the API response and formats the message to be sent back to the user.\nTelegram Send Message Node: Sends the formatted message back to the user via the Telegram bot.\n\nNodes Configuration\n\n1.Telegram Trigger Node\n\nEvent: Message\nUpdate Types: Message\nCommand: /sorgu\nDescription: This node listens for the {walletAddress} command followed by a wallet address from the user.\n\n2.HTTP Request Node\n\nMethod: GET\nURL: https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress={{ $json.message.text }}\nResponse Format: JSON\nDescription: This node sends a GET request to the Tronscan API using the wallet address provided by the user.\n\n3.Code Node\n Check Api Response:\nlet message;\n\nif (response.total && response.total &gt; 0) {\n  message = ðŸš¨ðŸ›‘ This Wallet is Blacklisted! ðŸ›‘ðŸš¨: ${response.data[0].blackAddress};\n} else {\n  message = âœ…ðŸ’š This Wallet is NOT Blacklisted! ðŸ’šâœ….;\n}\n\nreturn [\n  {\n    json: {\n      text: message,\n    },\n  },\n];\nDescription:** This node processes the API response to determine if the wallet address is blacklisted and formats the message to be sent back to the user.\n\n4.Telegram Send Message Node\n\nResource: Message\nOperation: Send\nChat ID: ={{$json[\"chat_id\"]}}\nText: ={{$json[\"text\"]}}\nDescription: This node sends the formatted message back to the user via the Telegram bot.\n\nHow to Use\nSet Up Telegram Bot: Create a Telegram bot and obtain the API token. Configure the bot to listen for the {walletAddress} command.\n\nImport Workflow: Import this workflow into your n8n instance.\n\nConfigure Credentials: Add your Telegram API credentials to the Telegram Trigger and Telegram Send Message nodes.\n\nRun Workflow: Start the workflow. Users can now send the {walletAddress} command to the Telegram bot to check if a Tron wallet address is blacklisted.\n\nExample Usage\nUser Telegram Command: {TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t}\nAPI Request: https://apilist.tronscanapi.com/api/stableCoin/blackList?blackAddress=TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\nAPI Response:\n  \"total\": 1,\n  \"data\": [\n    {\n      \"blackAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\",\n      \"tokenName\": \"USDT\",\n      \"num\": \"367583344429\",\n      \"time\": 1593184959,\n      \"transHash\": \"af4bc4d793f82ca5ba500cf13cf93ca3e7a56fccc2aabf8b09e55fc756500ea8\",\n      \"contractAddress\": \"TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\"\n    }\n  ]\n}\n\nBot Response: ðŸš¨ðŸ›‘ This Wallet is Blacklisted! ðŸ›‘ðŸš¨: TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t\n\n\n&gt; This workflow provides a simple and efficient way to check the blacklist status of Tron wallet addresses via a Telegram bot, making it easy for users to stay informed about the status of their wallets.\n",
  "totalViews": 361,
  "source": "official",
  "user": {
    "id": 93430,
    "name": "FORK SOFTWARE TECHNOLOGIES INC.",
    "username": "fork",
    "bio": "Blockchain and Web3 Consulting: NFT and STO development, Enterprise Blockchain solutions, Smart Contract development and auditing, DApp development. Custom Software Development: Tailored solutions to streamline your business processes. Web Development and UI/UX Design: Creating user-friendly, functional, and aesthetically pleasing websites. QA & Software Testing: Delivering flawless, high-performance software solutions. Empower your crypto projects with ICO and secure MLM software services!",
    "verified": false,
    "links": "[\"https://fork.com.tr\"]",
    "avatar": "https://gravatar.com/avatar/df8ae9c4d0c22e1311570275ec59c831b1d3a3511185d78eb3e5f46029fb34e2?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes",
    "Communication",
    "HITL"
  ],
  "nodes": [
    {
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers"
        ]
      }
    },
    {
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    }
  ],
  "nodeCount": 3,
  "createdAt": "2025-04-30T07:34:25.954Z",
  "path": "official/template_3797/workflow.json"
}