{
  "id": 2893,
  "name": "Fetch Dynamic Prompts from GitHub and Auto-Populate n8n Expressions in Prompt",
  "description": "Who Is This For?\n\nThis workflow is designed for AI engineers, automation specialists, and content creators who need a scalable system to dynamically manage prompts stored in GitHub. It eliminates manual updates, enforces required variable checks, and ensures that AI interactions always receive fully processed prompts.\n\nüöÄ What Problem Does This Solve?\n\nManually managing AI prompts can be inefficient and error-prone. This workflow:  \n‚úÖ Fetches dynamic prompts from GitHub  \n‚úÖ Auto-populates placeholders with values from the setVars node  \n‚úÖ Ensures all required variables are present before execution  \n‚úÖ Processes the formatted prompt through an AI agent\n\nüõ† How This Workflow Works\n\nThis workflow consists of three key branches, ensuring smooth prompt retrieval, variable validation, and AI processing.\n\n1Ô∏è‚É£ Retrieve the Prompt from GitHub (HTTP Request ‚Üí Extract from File ‚Üí SetPrompt)\n\nThe workflow starts manually or via an external trigger.\nIt fetches a text-based prompt stored in a GitHub repository.\nThe Extract from File Node retrieves the content from the GitHub file.\nThe SetPrompt Node stores the prompt, making it accessible for processing.\n\nüìå Note:  \nThe prompt must contain n8n expression format variables (e.g., {{ $json.company }}) so they can be dynamically replaced.\n\n2Ô∏è‚É£ Extract & Auto-Populate Variables (Check All Prompt Vars ‚Üí Replace Variables)\n\nA Code Node scans the prompt for placeholders in the n8n expression format ({{ $json.variableName }}).\nThe workflow compares required variables against the setVars node:\n    ‚úÖ If all variables are present, it proceeds to variable replacement.\n    ‚ùå If any variables are missing, the workflow stops and returns an error listing them.\nThe Replace Variables Node replaces all placeholders with values from setVars.\n\nüìå Example of a properly formatted GitHub prompt:\n\nHello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n\nThis ensures seamless replacement when processed in n8n.\n\n3Ô∏è‚É£ AI Processing & Output (AI Agent ‚Üí Prompt Output)\n\nThe Set Completed Prompt Node stores the final, processed prompt.\nThe AI Agent Node (Ollama Chat Model) processes the prompt.\nThe Prompt Output Node returns the fully formatted response.\n\nüìå Optional: Modify this to use OpenAI, Claude, or other AI models.\n\n‚ö†Ô∏è Error Handling: Missing Variables\n\nIf a required variable is missing, the workflow stops execution and provides an error message:\n\n‚ö†Ô∏è Missing Required Variables: [\"launch_date\"]\n\nThis ensures no incomplete prompts are sent to AI agents.\n\n‚úÖ Example Use Case\n\nüìú GitHub Prompt File (Using n8n Expressions)\n\nHello {{ $json.company }}, your product {{ $json.features }} launches on {{ $json.launch_date }}.\n\nüîπ Variables in setVars Node\n\n{\n  \"company\": \"PropTechPro\",\n  \"features\": \"AI-powered Property Management\",\n  \"launch_date\": \"March 15, 2025\"\n}\n\n‚úÖ Successful Output\n\nHello PropTechPro, your product AI-powered Property Management launches on March 15, 2025.\n\nüö® Error Output (If Missing launch_date)\n\n‚ö†Ô∏è Missing Required Variables: [\"launch_date\"]\n\nüîß Setup Instructions\n\n1Ô∏è‚É£ Connect Your GitHub Repository\n\nStore your prompt in a public or private GitHub repo.\nThe workflow will fetch the raw file using the GitHub API.\n\n2Ô∏è‚É£ Configure the SetVars Node\n\nDefine the required variables in the SetVars Node.\nMake sure the variable names match those used in the prompt.\n\n3Ô∏è‚É£ Test & Run\n\nClick Test Workflow to execute.\nIf variables are missing, it will show an error.\nIf everything is correct, it will output the fully formatted prompt.\n\n‚ö° How to Customize This Workflow\n\nüí° Need CRM or Database Integration?\n\nConnect the setVars node to an Airtable, Google Sheets, or HubSpot API to pull variables dynamically.\n\nüí° Want to Modify the AI Model?\n\nReplace the Ollama Chat Model with OpenAI, Claude, or a custom LLM endpoint.\n\nüìå Why Use This Workflow?\n\n‚úÖ No Manual Updates Required ‚Äì Fetches prompts dynamically from GitHub.  \n‚úÖ Prevents Broken Prompts ‚Äì Ensures required variables exist before execution.  \n‚úÖ Works for Any Use Case ‚Äì Handles AI chat prompts, marketing messages, and chatbot scripts.  \n‚úÖ Compatible with All n8n Deployments ‚Äì Works on Cloud, Self-Hosted, and Desktop versions.",
  "totalViews": 2528,
  "source": "official",
  "user": {
    "id": 92159,
    "name": "RealSimple Solutions",
    "username": "joeperes",
    "bio": "",
    "verified": true,
    "links": "[\"https://joeperes.com\"]",
    "avatar": "https://gravatar.com/avatar/4ad55fbdcc7808056aa180c02d52e3e373d4b894df7fa986e2dfd6c7eb127bfc?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "categories": [
        "Development"
      ],
      "subcategories": {}
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    }
  ],
  "nodeCount": 4,
  "createdAt": "2025-02-12T20:03:29.866Z",
  "path": "official/template_2893/workflow.json"
}