{
  "id": 3012,
  "name": "üåê Confluence Page AI Chatbot Workflow",
  "description": "üåê Confluence Page AI Chatbot Workflow\n\nThis n8n workflow template enables users to interact with an AI-powered chatbot designed to retrieve, process, and analyze content from Confluence pages. By leveraging Confluence's REST API and an AI agent, the workflow facilitates seamless communication and contextual insights based on Confluence page data.\n\nüåü How the Workflow Works\n\nüîó Input Chat Message\nThe workflow begins when a user sends a chat message containing a query or request for information about a specific Confluence page.\n\nüìÑ Data Retrieval\nThe workflow uses the Confluence REST API to fetch page details by ID, including its body in the desired format (e.g., storage, view).\nThe retrieved HTML content is converted into Markdown for easier processing.\n\nü§ñ AI Agent Interaction\nAn AI-powered agent processes the Markdown content and provides dynamic responses to user queries. The agent is context-aware, ensuring accurate and relevant answers based on the Confluence page's content.\n\nüí¨ Dynamic Responses\nUsers can interact with the chatbot to:\n  Summarize the page's content.\n  Extract specific details or sections.\n  Clarify complex information.\n  Analyze key points or insights.\n\nüöÄ Use Cases\n\nüìö Knowledge Management**: Quickly access and analyze information stored in Confluence without manually searching through pages.\nüìä Team Collaboration**: Facilitate discussions by summarizing or explaining page content during team chats.\nüîç Research and Documentation**: Extract critical insights from large documentation repositories for efficient decision-making.\n‚ôø Accessibility**: Provide an alternative way to interact with Confluence content for users who prefer conversational interfaces.\n\nüõ†Ô∏è Resources for Getting Started\n\nConfluence API Setup:\n   Generate an API token for authentication via Atlassian's account management portal.\n   Refer to Confluence's REST API documentation for endpoint details and usage instructions.\n\nn8n Installation:\n   Install n8n locally or on a server using the official installation guide.\n\nAI Agent Configuration:\n   Set up OpenAI or other supported language models for natural language processing.\n\n",
  "totalViews": 9031,
  "source": "official",
  "user": {
    "id": 92125,
    "name": "Joseph LePage",
    "username": "joe",
    "bio": "As an AI Automation consultant based in Canada, I partner with forward-thinking organizations to implement AI solutions that streamline operations and drive growth.",
    "verified": true,
    "links": "[\"\"]",
    "avatar": "https://gravatar.com/avatar/e7ca218dfc87b68344bbd66f40da01546d2f6fc1cf884267821e8a77e3e8410a?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes",
    "Communication",
    "HITL",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers"
        ]
      }
    },
    {
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Memory"
        ],
        "Memory": [
          "For beginners"
        ]
      }
    }
  ],
  "nodeCount": 5,
  "createdAt": "2025-02-25T16:29:19.644Z",
  "path": "official/template_3012/workflow.json"
}