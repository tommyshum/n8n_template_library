{
  "id": 3536,
  "name": "Extract & Summarize Bing Copilot Search Results with Gemini AI and Bright Data",
  "description": "Who is this for?\nThis workflow automates the process of querying Bing's Copilot Search, extracting structured data from the results, summarizing the information, and sending a notification via webhook. It leverages the Microsoft Copilot to retrieve search results and integrates AI-powered tools for data extraction and summarization.\n\nWhat problem is this workflow solving?\n\nData Analysts and Researchers: Who need to gather and summarize information from Bing search results efficiently.​\n\nDevelopers and Engineers: Looking to integrate Bing search data into applications or services.​\n\nDigital Marketers and SEO Specialists: Interested in monitoring search engine results for specific keywords or topics.\n\nWhat this workflow does\n\nManually extracting and summarizing information from search engine results can be time-consuming and error-prone. This workflow automates the process by:​\n\nPerforming Bing searches using Bright Data's Bing Search API.​\n\nExtracting structured data from the search results.​\n\nSummarizing the extracted information using AI tools.​\n\nSending the summarized data to a specified endpoint via webhook.\n\nSetup\n\nSign up at Bright Data.\nNavigate to Proxies & Scraping and create a new Web Unlocker zone by selecting Web Unlocker API under Scraping Solutions.\nIn n8n, configure the Header Auth account under Credentials (Generic Auth Type: Header Authentication).\n\nThe Value field should be set with the\nBearer XXXXXXXXXXXXXX. The XXXXXXXXXXXXXX should be replaced by the Web Unlocker Token.\nIn n8n, configure the Google Gemini(PaLM) Api account with the Google Gemini API key (or access through Vertex AI or proxy).\nUpdate the Perform a Bing Copilot Request node with the prompt you wish to perform the search.\nUpdate the Structured Data Webhook Notifier node with the Webhook endpoint of your choice.\nUpdate the Summary Webhook Notifier node with the Webhook endpoint of your choice.\n\nHow to customize this workflow to your needs\n\nModify Search Queries: Adjust the search terms to target different topics or keywords.​\n\nChange Data Extraction Logic: Customize the extraction process to capture specific data points from the search results.​\n\nAlter Summarization Techniques: Integrate different AI models or adjust parameters to change how summaries are generated.​\n\nUpdate Webhook Endpoints: Direct the summarized data to different endpoints as required.​\n\nSchedule Workflow Runs: Set up automated triggers to run the workflow at desired intervals.\n",
  "totalViews": 168,
  "source": "official",
  "user": {
    "id": 93657,
    "name": "Ranjan Dailata",
    "username": "ranjancse",
    "bio": "",
    "verified": true,
    "links": "[]",
    "avatar": "https://gravatar.com/avatar/7b74fe44a7ad32db7c783b972deb5848a4b1f043377bce4039737ed66da8305f?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers"
        ]
      }
    },
    {
      "name": "Summarization Chain",
      "type": "@n8n/n8n-nodes-langchain.chainSummarization",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Chains",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Chains",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Output Parsers"
        ]
      }
    },
    {
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Text Splitters"
        ]
      }
    },
    {
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Document Loaders"
        ]
      }
    },
    {
      "name": "Google Gemini Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    }
  ],
  "nodeCount": 7,
  "createdAt": "2025-04-13T08:51:07.772Z",
  "path": "official/template_3536/workflow.json"
}