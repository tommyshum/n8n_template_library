{
  "id": 2992,
  "name": "Split Test Different Agent Prompts with Supabase and OpenAI",
  "description": "\nSplit Test Agent Prompts with Supabase and OpenAI\nUse Case\nOftentimes, it's useful to test different settings for a large language model in production against various metrics. Split testing is a good method for doing this.\nWhat it Does\nThis workflow randomly assigns chat sessions to one of two prompts, the baseline and the alternative. The agent will use the same prompt for all interactions in that chat session.\nHow it Works\nWhen messages arrive, a table containing information regarding session ID and which prompt to use is checked to see if the chat already exists\nIf it does not, the session ID is added to the table and a prompt is randomly assigned\nThese values are then used to generate a response\n\nSetup\nCreate a table in Supabase called split_test_sessions. It needs to have the following columns: session_id (text) and show_alternative (bool)\nAdd your Supabase, OpenAI, and PostgreSQL credentials\nModify the Define Path Values node to set the baseline and alternative prompt values.\nActivate the workflow and test by sending messages through n8n's inbuilt chat\nExperiment with different chat sessions to test see both prompts in action\n\nNext Steps\nModify the workflow to test different LLM settings such as temperature\nAdd a method to measure the efficacy of the two alternative prompts\n\n",
  "totalViews": 4105,
  "source": "official",
  "user": {
    "id": 92742,
    "name": "Chris Carr",
    "username": "chriscarr",
    "bio": "Freelance workflow and AI developer based in Cardiff, Wales. I work with SMEs to automate processes and eliminate human-error.",
    "verified": true,
    "links": "[\"https://www.linkedin.com/in/chrisdavidcarr/\"]",
    "avatar": "https://gravatar.com/avatar/dfa8cbb7687f4d9a149258d2dd59e6f0131d835b4dc768858afe6bd1d497dc92?r=pg&d=retro&size=200"
  },
  "categories": [
    "Data & Storage",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Supabase",
      "type": "n8n-nodes-base.supabase",
      "categories": [
        "Data & Storage"
      ],
      "subcategories": {}
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Memory"
        ],
        "Memory": [
          "Other memories"
        ]
      }
    }
  ],
  "nodeCount": 4,
  "createdAt": "2025-02-24T10:35:55.283Z",
  "path": "official/template_2992/workflow.json"
}