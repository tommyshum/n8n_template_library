{
  "id": 3826,
  "name": "AI Chat Agent: Dumpling AI + GPT-4o to Auto-Save Local Business Data to Airtable",
  "description": "Who is this for?\nThis workflow is for digital marketers, small business owners, lead generation agencies, and VAs who need a scalable way to find and store local business leads using AI. Itâ€™s especially useful for teams that want to enrich leads with real-time news insights and save the structured data to Airtable.\n\nWhat problem is this workflow solving?\nManually researching local businesses and staying up to date with relevant news is time-consuming and inefficient. This automation eliminates that burden by using Dumpling AI chat agents to generate leads and context, GPT-4o to summarize, and Airtable to store everything in one place.\n\nWhat this workflow does\nThis AI workflow listens for a manual trigger in n8n and executes the following steps:\nExtracts local business leads using a Local Business Agent from Dumpling AI.\nPulls current news related to the business type or location using a News Agent from Dumpling AI.\nUses GPT-4o to combine both responses into a human-readable summary.\nExtracts structured lead data like name, category, and city.\nSaves the summary and lead data into Airtable for easy follow-up.\n\nSetup\n\n1. Create AI Agents in Dumpling AI\nSign in at Dumpling AI\nCreate two separate agents:\n  Local Business Agent: Designed to respond with structured lists of businesses by location and category.\n  News Agent: Designed to fetch relevant recent news and summaries about a specific industry or region.\nAfter setting up each agent, copy the Agent Key from Dumpling AI. These keys will be required in the headers of your HTTP Request nodes in n8n.\n\n2. Manual Trigger\nThis workflow begins with a manual trigger inside n8n, Which is the When chat message is recieved.\nThis makes it easy to test and reuse, especially during setup.\n\n3. Get Local Business Data from Dumpling AI\nThe first HTTP Request node sends a prompt like List 5 top real estate companies in Atlanta with full address and services.\nInclude your Local Business Agent Key in the x-agent-key header.\nThe response will return a structured list of business leads.\n\n4. Get News Context from Dumpling AI\nThe second HTTP Request node sends a prompt such as Give me the latest news related to the real estate market in Atlanta.\nUse your News Agent Key in the header.\nThis fetches a brief set of recent news summaries relevant to the businesses being researched.\n\n5. Use GPT-4o to Merge and Summarize\nThe GPT node combines the list of businesses and news into one coherent summary.\nYou can modify the prompt to output in paragraph format, bullet points, or structured notes.\n\n6. Save Lead to Airtable\nThe Airtable node sends all structured fields into your selected base and table.\nBe sure to connect your Airtable account and confirm the columns match exactly.\n\nHow to customize this workflow\nReplace the prompt inside the HTTP node to focus on different types of businesses or cities.\nExpand the GPT output to include additional lead info like websites, phone numbers, or emails if the agent includes them.\nAdd a webhook trigger to allow this flow to be run via a chatbot, external app, or button.\nLink to HubSpot or another CRM to sync the leads automatically.\nDuplicate the process to run for multiple industries in parallel.\n\nFinal Notes\nYou must create and configure your Dumpling AI agents first before running this workflow.\nThe Agent Keys from Dumpling AI are required in both HTTP Request nodes.\nThis flow is modular and flexible, ready for deeper CRM integrations.\nThe manual trigger is great for testing, but you can add a Webhook node to automate it.\n\nThis workflow helps you launch an intelligent lead gen process that combines location-targeted business discovery, AI-generated insights, and structured CRM-friendly output, all powered by Dumpling AI and OpenAI.\n",
  "totalViews": 306,
  "source": "official",
  "user": {
    "id": 93751,
    "name": "Yang",
    "username": "yang",
    "bio": "",
    "verified": true,
    "links": "[]",
    "avatar": "https://gravatar.com/avatar/6c996ff9ed140535b522858466c376f84e755b851b34b0ad900e4e6568568f84?r=pg&d=retro&size=200"
  },
  "categories": [
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Memory"
        ],
        "Memory": [
          "For beginners"
        ]
      }
    },
    {
      "name": "HTTP Request Tool",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Tools"
        ],
        "Tools": [
          "Recommended Tools"
        ]
      }
    }
  ],
  "nodeCount": 4,
  "createdAt": "2025-05-01T19:21:12.203Z",
  "path": "official/template_3826/workflow.json"
}