{
  "id": 2392,
  "name": "Telegram chat with PDF",
  "description": "What this template does\nThis template serves as a Chatbot that enables you to ask questions about the content of a PDF directly in Telegream.\n\nIt checks incoming Telegram messages if they contain a document. If they do, it stores the PDF in a Pinecone Vector store. If there's no document, it will search the Vector Store for information and try to answer your question.\n\nSetup\nOpen the Telegram app and search for the BotFather user (@BotFather) \nStart a chat with the BotFather \nType /newbot to create a new bot \nFollow the prompts to name your bot and get a unique API token \nSave your access token and username\nOnce you set your bot, you can send the pdf, and then ask questions about the content.\n\nHow to adjust it to your needs\nYou can exchange the Groq chat model with any model that you like\nExchange Pinecone with any other vector store tool you like (e.g. Supabase, Postgres or QDrant)\n\n#Telegram, #Pinecone, #Openai, #GroQ",
  "totalViews": 14663,
  "source": "official",
  "user": {
    "id": 91939,
    "name": "felipe biava cataneo",
    "username": "felipecataneo",
    "bio": "Engineer who likes to code as hobby",
    "verified": false,
    "links": "[\"\"]",
    "avatar": "https://gravatar.com/avatar/8c041ff6cc6d215ecd9033b0492456aac69765528401522577a110a78bc8eed9?r=pg&d=retro&size=200"
  },
  "categories": [
    "Communication",
    "HITL",
    "Development",
    "Core Nodes",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    },
    {
      "name": "Question and Answer Chain",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Chains",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Embeddings"
        ]
      }
    },
    {
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Retrievers"
        ]
      }
    },
    {
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Text Splitters"
        ]
      }
    },
    {
      "name": "Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Vector Stores",
          "Tools",
          "Root Nodes"
        ],
        "Tools": [
          "Other Tools"
        ]
      }
    },
    {
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Document Loaders"
        ]
      }
    },
    {
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    }
  ],
  "nodeCount": 9,
  "createdAt": "2024-08-27T18:24:42.130Z",
  "path": "official/template_2392/workflow.json"
}