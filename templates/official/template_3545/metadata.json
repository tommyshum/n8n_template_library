{
  "id": 3545,
  "name": "Automate Purchase Order Form Submissions from Outlook Excel Attachments with AI",
  "description": "This n8n template imports purchase order submissions from Outlook and converts attached purchase order forms in XLSX format into structured output.\n\nData entry jobs with user-submitted XLSX forms are time consuming, incredibly mundane but necessary tasks which in likelihood are inherited and critical to business operation.\n\nWhile we could dream of system overhauls and modernisation, the fact is that change is hard. There is another way however -  using n8n and AI! N8N offers an end-to-end solution to parse XLSX form attachments using LLM-powered OCR and send the extracted output to your ERP or otherwise.\n\nHow it works\nAn Outlook trigger is used to watch for incoming purchase order forms submitted via a shared inbox.\nThe email attachment for the submission is a form in xlsx format - like this one Purchase Order Example - which is imported into the workflow.\nThe 'Extract from File' node is used with the 'code' node to convert the xlsx file to markdown. This is so our LLM can understand it.\nThe Information Extractor node is used to read and extract the relevant purchase order details and line items from the form.\nA simple validation step is used to check for common errors such as missing PO number or the amounts not matching up. A notification is automated to reply to the buyer if so.\nOnce validation passes, a confirmation is sent to the buyer and the purchase order structured output can be sent along to internal systems.\n\nHow to use\nThis template only works if you're expecting and receiving forms in XLSX format. These can be invoices, request forms as well as purchase order forms.\nUpdate the Outlook nodes with your email or other emails as required.\nWhat's next? I've omitted the last steps to send to an ERP or accounting system as this is dependent on your org.\n\nRequirements\nOutlook for Emails\n  Check out how to setup credentials here: https://docs.n8n.io/integrations/builtin/credentials/microsoft\nOpenAI for LLM document understanding and extraction.\n\nCustomising the workflow\nThis template should work for other Excel files. Some will be more complicated than others so experiment with different parsers and extraction tools and strategies.\nCustomise the Information Extractor Schema to pull out the specific data you need. For example, capture any notes or comments given by the buyer.",
  "totalViews": 796,
  "source": "official",
  "user": {
    "id": 91804,
    "name": "Jimleuk",
    "username": "jimleuk",
    "bio": "Freelance consultant based in the UK specialising in AI-powered automations. I work with select clients tackling their most challenging projects. For business enquiries, send me an email at hello@jimle.uk\n\nLinkedIn: https://www.linkedin.com/in/jimleuk/\nX/Twitter: https://x.com/jimle_uk",
    "verified": true,
    "links": "[\"\"]",
    "avatar": "https://gravatar.com/avatar/4ab99e51473df76838beeaac908747f7928c625f869794815cabe34016967d51?r=pg&d=retro&size=200"
  },
  "categories": [
    "Communication",
    "HITL",
    "Development",
    "Core Nodes",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Microsoft Outlook",
      "type": "n8n-nodes-base.microsoftOutlook",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    },
    {
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    },
    {
      "name": "Text Classifier",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Chains",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Information Extractor",
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Chains",
          "Root Nodes"
        ]
      }
    }
  ],
  "nodeCount": 5,
  "createdAt": "2025-04-14T10:29:07.345Z",
  "path": "official/template_3545/workflow.json"
}