{
  "id": "3017",
  "meta": {
    "instanceId": "0c44ac19f742366550ae3fb4ce4ae895e626b4763c2f514a7df6f7b600fedb8c"
  },
  "name": "Extract and Normalize Facebook Lead Data for CRM Integration  ",
  "tags": [
    {
      "id": "1cFXzelWeSIdtIoE",
      "name": "Marketing",
      "createdAt": "2025-02-28T03:19:57.565Z",
      "updatedAt": "2025-02-28T03:19:57.565Z"
    }
  ],
  "nodes": [
    {
      "id": "ff568d83-1457-462d-831b-ea9fe9efcfbb",
      "name": "When clicking ‘Test workflow’",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1060,
        280
      ],
      "parameters": {},
      "typeVersion": 1
    },
    {
      "id": "102a0506-fe9b-4323-ae8c-54b2b1279477",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -460,
        120
      ],
      "parameters": {
        "color": 5,
        "width": 180,
        "height": 320,
        "content": "## Filter\n\nIn this node, you can extract only the required data from a specific field."
      },
      "typeVersion": 1
    },
    {
      "id": "8a73755e-a217-4c37-b5b9-b16163cac9f6",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -880,
        40
      ],
      "parameters": {
        "width": 180,
        "height": 400,
        "content": "## Record Limits\n\nA limit of 10,000 has been set to avoid pagination.\n"
      },
      "typeVersion": 1
    },
    {
      "id": "b389d03f-54df-4531-b2e8-2118942189ee",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        260
      ],
      "parameters": {
        "color": 4,
        "content": "Here, you can now send the data wherever you need it."
      },
      "typeVersion": 1
    },
    {
      "id": "7d010adb-156d-42c1-b353-0c5a4f43564e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "parameters": {
        "height": 440,
        "content": "## Order fields\n\nIn some cases, the form fields come unstructured. In this node, you can add variations of the fields and organize them for the next node."
      },
      "typeVersion": 1
    },
    {
      "id": "ef3db052-459c-4db8-86f8-2bb22b799943",
      "name": "Facebook Graph API get forms",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        -840,
        280
      ],
      "parameters": {
        "edge": "leadgen_forms",
        "node": "xxxxxxxxxxxxxxx",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "limit",
                "value": "10000"
              }
            ]
          }
        },
        "graphApiVersion": "v21.0"
      },
      "typeVersion": 1
    },
    {
      "id": "98f58de2-a630-4a7a-8071-bd723e1cc2e2",
      "name": "Facebook Graph API get leads",
      "type": "n8n-nodes-base.facebookGraphApi",
      "position": [
        -180,
        280
      ],
      "parameters": {
        "edge": "=leads",
        "node": "={{ $json.id }}",
        "options": {
          "fields": {
            "field": [
              {
                "name": "field_data"
              },
              {
                "name": "created_time"
              },
              {
                "name": "id"
              },
              {
                "name": "ad_id"
              },
              {
                "name": "ad_name"
              },
              {
                "name": "adset_id"
              },
              {
                "name": "adset_name"
              },
              {
                "name": "campaign_id"
              },
              {
                "name": "campaign_name"
              }
            ]
          },
          "queryParameters": {
            "parameter": [
              {
                "name": "limit",
                "value": "10000"
              }
            ]
          }
        },
        "graphApiVersion": "v21.0"
      },
      "typeVersion": 1
    },
    {
      "id": "8f420c47-0d01-463d-b7ea-3943b314791e",
      "name": "Code - Order fields",
      "type": "n8n-nodes-base.code",
      "position": [
        60,
        280
      ],
      "parameters": {
        "jsCode": "// This code can be used in an n8n Function node.\n// It assumes the input is an array of objects where each one follows  \n// the page structure with a \"data\" property, and each record includes  \n// \"field_data\" and other fields.\n\n// Canonical order of the field_data fields\nconst canonicalOrder = [\n\t\"source\",\n\t\"medium\",\n\t\"content\",\n\t\"campaign\",\n\t\"term\",\n\t\"program\",\n\t\"location\",\n\t\"education_level\",\n\t\"id_number\",\n\t\"name\",\n\t\"surname\",\n\t\"phone\",\n\t\"email\"\n];\n\n// Mapping for renaming fields (in case of different names in some records)\nconst fieldMapper = {\n\t\"number_id\": \"id_number\",\n\t\"programo\": \"program\",\n\t\"select_location\": \"location\"\n};\n\n// Function to process the field_data array, mapping and ordering its elements\nfunction processFieldData(field_data) {\n\tconst fieldObj = {};\n\t// Convert the array into an object using the first value of each \"values\" array\n\tfor (const field of field_data) {\n\t\tlet key = field.name;\n\t\t// If the field has a name that needs to be renamed, do it\n\t\tif (fieldMapper.hasOwnProperty(key)) {\n\t\t\tkey = fieldMapper[key];\n\t\t}\n\t\t// Take the first value from the values array\n\t\tfieldObj[key] = Array.isArray(field.values) ? field.values[0] : field.values;\n\t}\n\t\n\t// Create an ordered object according to the canonical array\n\tconst ordered = {};\n\tfor (const key of canonicalOrder) {\n\t\tif (Object.prototype.hasOwnProperty.call(fieldObj, key)) {\n\t\t\tordered[key] = fieldObj[key];\n\t\t}\n\t}\n\treturn ordered;\n}\n\nconst results = [];\n\n// The n8n input comes in the \"items\" array\n// Each item is assumed to have a \"json\" property with the full structure\nfor (const item of items) {\n\tconst page = item.json;\n\t// If there is no data, skip this item\n\tif (!page.data) continue;\n\t// Process each record within the data property\n\tfor (const record of page.data) {\n\t\tconst newRecord = {};\n\t\t// Copy all properties except field_data\n\t\tfor (const key in record) {\n\t\t\tif (key !== \"field_data\") {\n\t\t\t\tnewRecord[key] = record[key];\n\t\t\t}\n\t\t}\n\t\t// Process and rename field_data to get the desired order\n\t\tnewRecord.field_data = processFieldData(record.field_data || []);\n\t\t// Add the new record to the results\n\t\tresults.push({ json: newRecord });\n\t}\n}\n  \nreturn results;\n"
      },
      "typeVersion": 2
    },
    {
      "id": "1bf5e479-4f2a-4cc1-b03f-7caf0f223f36",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -480,
        -720
      ],
      "parameters": {
        "color": 6,
        "width": 1020,
        "height": 700,
        "content": "## How It Works  \n1. **Trigger**: Start manually or schedule the workflow.  \n2. **Form Retrieval**: Fetch all leadgen forms from your Facebook Page.  \n3. **Data Preparation**:  \n   - Split bulk data into individual records.  \n   - Filter forms by name (case-insensitive).  \n4. **Lead Extraction**: Get raw lead data with metadata (ad campaigns, timestamps).  \n5. **Data Transformation**:  \n   - **Code Node**: Renames fields and enforces canonical order.  \n   - **Set Node**: Exposes normalized fields (e.g., `field_data.email`).  \n6. **Output**: Structured data ready for CRM/analytics tools.  \n\n### Setup Guide  \n1. **Facebook Configuration**:  \n   - Replace `xxxxxxxxxxxxxxx` with your Facebook Page ID.  \n   - Ensure `leadgen_forms` API access in [Meta Developer Portal](https://developers.facebook.com/).  \n2. **Customization**:  \n   - Adjust field mappings in the **Code - Order fields** node if needed.  \n   - Add nodes to send data to your CRM (e.g., HubSpot, Salesforce).  \n\n### Customization Tips  \n- **Add Error Handling**: Include an IF node to flag incomplete records.  \n- **Enrich Data**: Use nodes like Clearbit to append company info.  \n- **Automate**: Replace the manual trigger with a schedule or webhook.  \n\n### Why This Works  \n- **Time Savings**: Reduces manual data cleaning by 80%.  \n- **Scalability**: Processes 10,000+ leads per run.  \n- **Adaptability**: Handles multilingual or inconsistently named form fields."
      },
      "typeVersion": 1
    },
    {
      "id": "e6fd4734-33c6-4148-be94-9a5e6bc0edee",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1120,
        -680
      ],
      "parameters": {
        "color": 2,
        "width": 620,
        "height": 340,
        "content": "## Extract Leads from Facebook Forms  \n### Who Is This For?  \nMarketing teams using Facebook Lead Ads.  \n### What Problem Does This Solve?  \nAutomates lead extraction, normalizes inconsistent field names, and prepares data for CRMs.  \n### Setup Guide  \n1. Replace `xxxxxxxxxxxxxxx` with your Facebook Page ID.  \n2. Configure API permissions in Meta Developer Portal.  \n### Customization Tips  \nAdd nodes to send data to tools like HubSpot or Google Sheets.  "
      },
      "typeVersion": 1
    },
    {
      "id": "f987bdef-5e7b-4f93-8f99-9cff229906f7",
      "name": "Filter Forms by Name",
      "type": "n8n-nodes-base.filter",
      "position": [
        -420,
        280
      ],
      "parameters": {
        "options": {
          "ignoreCase": true
        },
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": false,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "f6617fde-48a5-4980-99eb-d11ef2410f23",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.name }}",
              "rightValue": "diplomados"
            }
          ]
        }
      },
      "typeVersion": 2.2
    },
    {
      "id": "d7a52552-e3d9-40c4-98e9-890c63132bc2",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        560,
        -180
      ],
      "parameters": {
        "color": 3,
        "content": "Need help?  \n- [How manage leadgen Forms Facebook](https://developers.facebook.com/docs/graph-api/reference/page/leadgen_forms/)"
      },
      "typeVersion": 1
    },
    {
      "id": "a2ba65a9-af8c-4ed8-a4f8-b1674e11636b",
      "name": "Split Data into Individual Records",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -640,
        280
      ],
      "parameters": {
        "options": {},
        "fieldToSplitOut": "data"
      },
      "typeVersion": 1
    },
    {
      "id": "99698e03-5bde-4408-9968-005d2f4270b8",
      "name": "Reorder and Expose Lead Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        300,
        280
      ],
      "parameters": {
        "include": "except",
        "options": {
          "dotNotation": false
        },
        "assignments": {
          "assignments": [
            {
              "id": "fa532e09-bfdf-4626-88f6-dd6ca38a0f03",
              "name": "field_data.source",
              "type": "string",
              "value": "={{ $json.field_data.source }}"
            },
            {
              "id": "d37be1f3-7f2d-4617-8529-e943916f16db",
              "name": "field_data.medium",
              "type": "string",
              "value": "={{ $json.field_data.medium }}"
            },
            {
              "id": "093ca677-f70c-4ee8-ae18-25eb41f4f1df",
              "name": "field_data.content",
              "type": "string",
              "value": "={{ $json.field_data.content }}"
            },
            {
              "id": "1ca8d794-2a94-473a-b3e4-ab3c40f0c2eb",
              "name": "field_data.campaign",
              "type": "string",
              "value": "={{ $json.field_data.campaign }}"
            },
            {
              "id": "0b838696-06b3-46bf-be98-db237a3a6f16",
              "name": "field_data.term",
              "type": "string",
              "value": "={{ $json.field_data.term }}"
            },
            {
              "id": "03ef49b0-c7e9-4754-8046-e507f0e30a39",
              "name": "field_data.programa",
              "type": "string",
              "value": "={{ $json.field_data.programa }}"
            },
            {
              "id": "7942673c-e367-4c8f-b6c0-6f262ecf27de",
              "name": "field_data.ubicacion",
              "type": "string",
              "value": "={{ $json.field_data.ubicacion }}"
            },
            {
              "id": "6a7e1748-e803-4645-b68f-9b290ef2452d",
              "name": "field_data.nivel_formacion",
              "type": "string",
              "value": "={{ $json.field_data.nivel_formacion }}"
            },
            {
              "id": "6bb9922c-48a5-4ac1-b0e8-6a3084e863f9",
              "name": "field_data.numero_documento",
              "type": "string",
              "value": "={{ $json.field_data.numero_documento }}"
            },
            {
              "id": "1927ed09-97e2-4dd1-97df-1bb98100a743",
              "name": "field_data.nombres",
              "type": "string",
              "value": "={{ $json.field_data.nombres }}"
            },
            {
              "id": "e280c44a-f37a-4ee1-b9d4-28256cee36bc",
              "name": "field_data.apellidos",
              "type": "string",
              "value": "={{ $json.field_data.apellidos }}"
            },
            {
              "id": "5639c3fc-122c-476c-a9c2-9556cba469f8",
              "name": "field_data.telefono",
              "type": "string",
              "value": "={{ $json.field_data.telefono }}"
            },
            {
              "id": "fc4b2c94-ecd8-47cd-9ef6-90bbe51eb5bc",
              "name": "field_data.correo",
              "type": "string",
              "value": "={{ $json.field_data.correo }}"
            }
          ]
        },
        "excludeFields": "field_data",
        "includeOtherFields": true
      },
      "typeVersion": 3.4
    }
  ],
  "active": false,
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0ad4c6c1-6c1c-440e-9450-fc821a45de35",
  "connections": {
    "Code - Order fields": {
      "main": [
        [
          {
            "node": "Reorder and Expose Lead Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Forms by Name": {
      "main": [
        [
          {
            "node": "Facebook Graph API get leads",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Graph API get forms": {
      "main": [
        [
          {
            "node": "Split Data into Individual Records",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Facebook Graph API get leads": {
      "main": [
        [
          {
            "node": "Code - Order fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Facebook Graph API get forms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Data into Individual Records": {
      "main": [
        [
          {
            "node": "Filter Forms by Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}