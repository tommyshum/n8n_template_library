{
  "id": 2839,
  "name": "Calculate the Centroid of a Set of Vectors",
  "description": "n8n Workflow: Calculate the Centroid of a Set of Vectors\n\nOverview\nThis workflow receives an array of vectors in JSON format, validates that all vectors have the same dimensions, and computes the centroid. It is designed to be reusable across different projects.\n\nWorkflow Structure\nNodes and Their Functions:\nReceive Vectors (Webhook): Accepts a GET request containing an array of vectors in the vectors parameter.\n   Expected Input: vectors parameter in JSON format.\n   Example Request: /webhook/centroid?vectors=[[2,3,4],[4,5,6],[6,7,8]]\n   Output: Passes the received data to the next node.\n\nExtract & Parse Vectors (Set Node): Converts the input string into a proper JSON array for processing.\n   Ensures vectors is a valid array.\n   If the parameter is missing, it may generate an error.\n   Expected Output Example:\n      {\n     \"vectors\": [[2,3,4],[4,5,6],[6,7,8]]\n   }\n   \nValidate & Compute Centroid (Code Node): Validates vector dimensions and calculates the centroid.\n   Validation: Ensures all vectors have the same number of dimensions.\n   Computation: Averages each dimension to determine the centroid.\n   If validation fails: Returns an error message indicating inconsistent dimensions.\n   Successful Output Example:\n      {\n     \"centroid\": [4,5,6]\n   }\n      Error Output Example:\n      {\n     \"error\": \"Vectors have inconsistent dimensions.\"\n   }\n   \nReturn Centroid Response (Respond to Webhook Node): Sends the final response back to the client.\n   If the computation is successful, it returns the centroid.\n   If an error occurs, it returns a descriptive error message.\n   Example Response:\n      {\n     \"centroid\": [4, 5, 6]\n   }\nInputs\nJSON array of vectors, where each vector is an array of numerical values.\n\nExample Input\n{\n  \"vectors\": [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9]\n  ]\n}\n\nSetup Guide\nCreate a new workflow in n8n.\nAdd a Webhook node (Receive Vectors) to receive JSON input.\nAdd a Set node (Extract & Parse Vectors) to extract and convert the data.\nAdd a Code node (Validate & Compute Centroid) to:\n   Validate dimensions.\n   Compute the centroid.\nAdd a Respond to Webhook node (Return Centroid Response) to return the result.\n\nFunction Node Script Example\nconst input = items[0].json;\nconst vectors = input.vectors;\n\nif (!Array.isArray(vectors) || vectors.length === 0) {\n  return [{ json: { error: \"Invalid input: Expected an array of vectors.\" } }];\n}\n\nconst dimension = vectors[0].length;\nif (!vectors.every(v =&gt; v.length === dimension)) {\n  return [{ json: { error: \"Vectors have inconsistent dimensions.\" } }];\n}\n\nconst centroid = new Array(dimension).fill(0);\nvectors.forEach(vector =&gt; {\n  vector.forEach((val, index) =&gt; {\n    centroid[index] += val;\n  });\n});\n\nfor (let i = 0; i &lt; dimension; i++) {\n  centroid[i] /= vectors.length;\n}\n\nreturn [{ json: { centroid } }];\n\nTesting\nUse a tool like Postman or the n8n UI to send sample inputs and verify the responses.\nModify the input vectors to test different scenarios.\n\nThis workflow provides a simple yet flexible solution for vector centroid computation, ensuring validation and reliability.\n",
  "totalViews": 460,
  "source": "official",
  "user": {
    "id": 92294,
    "name": "Mauricio Perera",
    "username": "rckflr",
    "bio": "Automation consultant with over 10 years of experience specializing in AI, no-code, and workflow optimization. Iâ€™ve delivered tailored AI and NLP solutions across real estate, healthcare, and more, enhancing efficiency and customer experiences. Proficient in tools like Make, Airtable, and Zapier, I also integrate GPT models to create scalable, innovative automations. Contact me to discuss custom n8n workflows or advanced automations to streamline your processes.",
    "verified": true,
    "links": "[\"https://www.linkedin.com/in/mauricioperera/\"]",
    "avatar": "https://gravatar.com/avatar/a6414920fb4353a63c1bf6af3e78e0b1387fa77adcf7610f9a7ff6e6d39ee757?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Core Nodes"
  ],
  "nodes": [
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    }
  ],
  "nodeCount": 1,
  "createdAt": "2025-02-03T02:28:31.005Z",
  "path": "official/template_2839/workflow.json"
}