{
  "id": 3560,
  "name": "Extract Trends, Auto-Generate Social Content with AI, Reddit, Google & Post",
  "description": "Extract Trends and Auto-Generate Social Media Content with OpenAI, Reddit, and Google Trends: Approve and Post to Instagram, TikTok, and More\n\nDescription\nWhat Problem Does This Solve? üõ†Ô∏è\nThis workflow automates trend extraction and social media content creation for businesses and marketers. It eliminates manual trend research and content generation by fetching trends, scoring them with AI, and posting tailored content to multiple platforms. Target audience: Social media managers, digital marketers, and businesses aiming to streamline content strategies.\n\nWhat Does It Do? üåü\nFetches trending topics from Reddit, X and Google Trends\nScores trends for relevance using OpenAI.\nGenerates content for Twitter/X, LinkedIn, Instagram and Facebook\nPosts to supported platforms \nStores results in Google Sheets for tracking\n\nKey Features üìã\nReal-time trend fetching from Reddit and Google Trends.\nAI-driven trend scoring and content generation (OpenAI).\nAutomated posting to Twitter/X, LinkedIn, Instagram, and Facebook.\nPersistent storage in Google Sheets.\nSetup Instructions\n\nPrerequisites ‚öôÔ∏è\nn8n Instance**: Self-hosted or cloud n8n instance.\nAPI Credentials**:\n  Reddit API: Client ID and secret from Reddit.\n  SerpApi (Google Trends): API key from SerpApi, stored in n8n credentials \n  OpenAI API: API key with GPT model access.\n  Twitter/X API: OAuth 1.0a credentials with write permissions.\n  LinkedIn API: OAuth 2.0 credentials with w_organization_social scope.\n  Instagram/Facebook API: Meta Developer app with posting permissions.\n  Google Sheets API: Credentials from Google Cloud Console.\n\nInstallation Steps üì¶\nImport the Workflow:\n   Copy the workflow JSON from the \"Template Code\" section below.\n   Import it into n8n via \"Import from File\" or \"Import from URL\".\nConfigure Credentials:\n   Add API credentials in n8n‚Äôs Credentials section for Reddit, SerpApi, OpenAI, Twitter/X, LinkedIn, Instagram/Facebook, and Google Sheets.\n   Assign credentials to respective nodes. For example:\n     In the Fetch Google Trends node (HTTP Request), use n8n credentials for SerpApi instead of hardcoding the API key.\n     Example: Set the API key in n8n credentials as SerpApiKey and reference it in the node‚Äôs query parameter: api_key={{ $credentials.SerpApiKey }}.\nSet Up Google Sheets with the following columns (exact column names are case-sensitive)\n -Timestamp | Trend | Score | BrandVoice | AudienceMood |\n\nCustomize Nodes:\nOpenAI Nodes** (Trend Relevance Scoring, Generate Social Media Content): Update the model (e.g., gpt-4o) and prompt as needed.\nHTTP Request Nodes** (Post to Twitter/X, Post to LinkedIn, etc.): Verify URLs, authentication, and payloads.\nBrand Voice/Audience Mood**: Adjust Prepare Trend Scoring Input for your desired brand_voice (e.g., \"casual\") and audience_mood (e.g., \"curious\").\nTest the Workflow:\nFetch Reddit Trends to Store Selected Trends- to score and store trends.\nRetrieve Latest Trends to end) to generate and post content\nCheck Google Sheets for posting statuses\nHow It Works\n\nHigh-Level Steps üîç\nFetch Trends**: Pulls trends from Reddit,X and Google Trends.\nScore Trends**: Uses OpenAI to score trends for relevance.\nGenerate Content**: Creates platform-specific social media content.\nPost Content**: Posts to LinkedIn,  Facebook or X\n\nDetailed descriptions are available in the sticky notes within the workflow screenshot above.\n\nNode Names and Actions\n\nTrend Extraction and Scoring\nDaily Trigger Idea: Triggers the workflow daily.\nSet Default Inputs: Sets default brand_voice and inputs.\nFetch Reddit Trends: Fetches Reddit posts.\nExtract Reddit Trends: Extracts trends from Reddit.\nFetch Google Trends: Fetches Google Trends via SerpApi.\nExtract Google Trends2: Processes Google Trends data.\nFetch Twitter Mentions: Fetches Twitter mentions.\nTranslate Tweets to English: Translates tweets.\nFix Tweet Translation Output: Fixes translation format.\nDetect Audience Mood: Detects audience mood.\nFix Audience Mood Output: Fixes mood output format.\nAnalyze News Sentiment: Analyzes news sentiment.\nCombine Data (Merge): Merges all data sources.\nMerge Items into Single Item: Combines data into one item.\nCombine Trends and UGC: Combines trends with UGC.\nPrepare Trend Scoring Input: Prepares data for scoring.\nTrend Relevance Scoring: Scores trends with OpenAI.\nParse Trend Scores: Parses scoring output.\nStore Selected Trends: Stores trends in Google Sheets.\n\nContent Generation and Posting\nRetrieve Latest Trends: Retrieves trends from Google Sheets.\nParse Retrieved Trends: Parses retrieved trends.\nSelect Top Trends: Selects the top trend.\nGenerate Social Media Content: Generates platform-specific content.\nParse Social Media Content: Parses generated content.\nGenerate Images: Generates images for posts (if applicable).\n-Handle Approvals/Rejection before Posting\nPost to Instagram: Posts to Instagram.\nPost to Facebook: Posts to Facebook.\nPost to LinkedIn: Posts to LinkedIn.\n\nCustomization Tips\n\nAdd Trend Sources** üì°: Include more sources (e.g., Instagram trends) by adding nodes to Combine Data (Merge).\nChange Content Tone** ‚úçÔ∏è: Update the Generate Social Media Content prompt for a different tone (e.g., \"humorous\").\nAdjust Schedule** ‚è∞: Modify Daily Trigger Idea to run hourly or weekly.\nAutomate TikTok/YouTube** üé•: Add video generation (e.g., FFMPEG) to post TikTok and YouTube Shorts\n\n",
  "totalViews": 14560,
  "source": "official",
  "user": {
    "id": 93189,
    "name": "Immanuel",
    "username": "spectrabit",
    "bio": "",
    "verified": true,
    "links": "[\"\"]",
    "avatar": "https://gravatar.com/avatar/d56a3b4ce7573e035c16e2b0fa5c2f2d658085ba319b166f406b5cd07ac40ad0?r=pg&d=retro&size=200"
  },
  "categories": [
    "Data & Storage",
    "Productivity",
    "Development",
    "Core Nodes",
    "Communication",
    "HITL",
    "Marketing",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "categories": [
        "Data & Storage",
        "Productivity"
      ],
      "subcategories": {}
    },
    {
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers"
        ]
      }
    },
    {
      "name": "Facebook Graph API",
      "type": "n8n-nodes-base.facebookGraphApi",
      "categories": [
        "Development"
      ],
      "subcategories": {}
    },
    {
      "name": "Gmail",
      "type": "n8n-nodes-base.gmail",
      "categories": [
        "Communication",
        "HITL"
      ],
      "subcategories": {
        "HITL": [
          "Human in the Loop"
        ]
      }
    },
    {
      "name": "LinkedIn",
      "type": "n8n-nodes-base.linkedIn",
      "categories": [
        "Marketing",
        "Communication"
      ],
      "subcategories": {}
    },
    {
      "name": "Reddit",
      "type": "n8n-nodes-base.reddit",
      "categories": [
        "Communication"
      ],
      "subcategories": {}
    },
    {
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "categories": [
        "Development",
        "Core Nodes"
      ],
      "subcategories": {
        "Core Nodes": [
          "Helpers",
          "Data Transformation"
        ]
      }
    },
    {
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Miscellaneous",
          "Root Nodes"
        ]
      }
    }
  ],
  "nodeCount": 8,
  "createdAt": "2025-04-15T10:37:51.062Z",
  "path": "official/template_3560/workflow.json"
}