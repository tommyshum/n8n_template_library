{
  "id": 3761,
  "name": "Email Assistant: Convert Natural Language to SQL Queries with Phi4-mini and PostgreSQL",
  "description": "Who is this for?\n\nüßëüèªü´±üèª‚Äçü´≤üèªü§ñ Humans and Robots alike.\n\nThis workflow can be used as a Chat Trigger, as well as a Workflow Trigger.\n\nIt will take a natural language request, and then generate a SQL query. The resulting query parameter will contain the query, and a sqloutput parameter will contain the results of executing such query.\n\nWhat's the use case?\n\nThis template is most useful paired with other workflows that extract e-mail information and store it in a structured Postgres table, and use LLMs to understand inquiries about information contained in an e-mail inbox and formulate questions that needs answering.\n\nPlus, the prompt can be easily adapted to formulate SQL queries over any kind of structured database.\n\nPrivacy and Economics\n\nAs LLM provider I'm using Ollama locally, as I consider my e-mail extremely sensitive information. As model, phi4-mini does an excellent job balancing quality and efficiency.\n\nSetup\n\nUpon running for the first time, this workflow will automatically trigger a sub-section to read all tables and extract their schema into a local file.\n\nThen, either by chatting with the workflow in n8n's interface or by using it as a sub-workflow, you will get a query and a sqloutput response.\n\nCustomizations\n\nIf you want to work with just one particular table yet keep edits at bay, append a condition to the List all tables in a database step, like so:\n\nWHERE table_schema='public' AND table_name='my_emails_table_name'\n\nTo repurpose this workflow to work with any other data corpus in a structured database, inspect the AI Agent user and system prompts and edit them accordingly.\n",
  "totalViews": 501,
  "source": "official",
  "user": {
    "id": 94107,
    "name": "Alfonso Corretti",
    "username": "acorretti",
    "bio": "Software Engineering | Die-hard maker",
    "verified": true,
    "links": "[\"https://github.com/acorretti\"]",
    "avatar": "https://gravatar.com/avatar/efd90112fec439a3e5603975bcc0842956e6fef36c19e25517b5b39508910a66?r=pg&d=retro&size=200"
  },
  "categories": [
    "Development",
    "Data & Storage",
    "AI",
    "Langchain"
  ],
  "nodes": [
    {
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "categories": [
        "Development",
        "Data & Storage"
      ],
      "subcategories": {}
    },
    {
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Agents",
          "Root Nodes"
        ]
      }
    },
    {
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "categories": [
        "AI",
        "Langchain"
      ],
      "subcategories": {
        "AI": [
          "Language Models",
          "Root Nodes"
        ],
        "Language Models": [
          "Chat Models (Recommended)"
        ]
      }
    }
  ],
  "nodeCount": 3,
  "createdAt": "2025-04-27T14:46:07.274Z",
  "path": "official/template_3761/workflow.json"
}